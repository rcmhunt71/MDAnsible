# Download ZIP file from FTP and extract/copy the source to the proper directory

# The following variables need to be provided via the commandline:
#   NEW_VERSION - The version to be downloaded and deployed.
#   ENV - The environment to leveage (prod|uat|staging|qa|dev)

- name: Download and install the new version of WEB Code
  hosts: web_hosts
  gather_facts: no

  vars_files:
    - ../vars/deployment_vars.yaml
    - ../vars/ftp_server.yaml
    - ../../OS/windows/vars/zip_utility.yaml

  vars:
    _ENV: '{{ ENV | upper }}'
    _NEW_VERSION_WEB_ZIP: '{{ NEW_VERSION }}.7z'
    _USE_DEFAULT_CREDS: "{{ 'yes' if  _ENV == 'UAT' or  _ENV == 'PROD' else 'no' }}"
    _FTP_SERVER_NAME: "{{ 'FTP_SERVER_' + _ENV }}"
    _FTP_SERVER_IP: "{{ vars[_FTP_SERVER_NAME] }}"
    _FTP_URL: "{{'ftp://' + _FTP_SERVER_IP + '/' + FTP_SOURCE_DIR + '/' + _NEW_VERSION_WEB_ZIP }}"
 
  tasks:
  # ----------------------------------------------------------------------------------------
  # Download (via FTP) the new version ZIP archive
  # ----------------------------------------------------------------------------------------
  - debug:
      msg:
      - 'NEW_VERSION: {{ NEW_VERSION }}'
      - 'FTP_SERVER_NAME: {{ _FTP_SERVER_NAME }}'
      - 'ENVIRONMENT: {{ _ENV }}'
      - 'FTP SERVER: {{ _FTP_SERVER_IP }}'
      - 'FTP URL: {{ _FTP_URL }}'
      - 'USE DEFAULT CREDS: {{ _USE_DEFAULT_CREDS }}'

#  - name: FTP the specified version to disk
#  - win_get_url:
#      url: '{{ _FTP_URL }}'
#      dest: {{ WEB_SITES_DIR }}
#      use_default_credential: '{{ _USE_DEFAULT_CREDS }}'

  # ----------------------------------------------------------------------------------------
  # TEMP - Copy file to target directory (mimicks FTP result)
  # ----------------------------------------------------------------------------------------
  - name: Move template to directory, acts as if FTP occurred.
    win_copy:
      src: '{{ WEB_ARCHIVE_DIR }}\{{ _NEW_VERSION_WEB_ZIP }}'
      dest: '{{ WEB_SITES_DIR }}\{{ _NEW_VERSION_WEB_ZIP }}'
      backup: no
      remote_src: yes

  # ----------------------------------------------------------------------------------------
  # Unpack the downloaded ZIP file.
  # ----------------------------------------------------------------------------------------
  - name: Unpack the zip in the target directory
    win_shell: 'cmd /c "{{ ZIP_EXECUTABLE }}" x -bd -y {{ _NEW_VERSION_WEB_ZIP }}'
    args:
      chdir: '{{ WEB_SITES_DIR }}'
    register: UNZIP_RESULTS

  - debug: 
      msg:
        - "CMD: {{ UNZIP_RESULTS.cmd }}"
        - "FAILED? {{ UNZIP_RESULTS.failed }}"
        - "{{ UNZIP_RESULTS.stdout_lines }}"

  # ----------------------------------------------------------------------------------------
  # Delete the ZIP file (the next deployment would unnecessarily archive it into the zip
  # ----------------------------------------------------------------------------------------
  - name: Delete the zip file
    win_file:
      path: '{{ WEB_SITES_DIR }}\{{ _NEW_VERSION_WEB_ZIP }}'
      state: absent


